#include <iostream>
#include <fstream>
#include <string>
#include <iomanip>

using namespace std;

class Loan
{
public:
    Loan(double upphaed, double vextir, int afborganir);
    void displaySchedule();

private:
    void pay(int i);
    double payments();
    double interest(int i);
    double Balance(int i);

    double sumOfInstalments;
    double sumOfInterest;
    double total;
    double principal{};
    double interestRate;
    int numOfPayments;
};

   Loan::Loan(double upphaed, double vextir, int afborganir)
   {
       principal =upphaed;
       interestRate = vextir;
       numOfPayments = afborganir;
       sumOfInstalments = 0.0;
       sumOfInterest = 0.0;
       total = 0.0;
   }

void Loan::pay(int i)
{
    sumOfInstalments += payments();
    sumOfInterest += interest(i);
    total += payments() + interest(i);
}

double Loan::payments()
{
    return principal / numOfPayments;
}

double Loan::interest(int i)
{
    return Balance(i) * (interestRate / 12) / 100;
}

double Loan::Balance(int i)
{
    return principal - (i - 1) * payments();
}

void readData(double& principal, double& interestRate, int& numOfPayments)
{
    cout << "Principal: ";
    cin >> principal;
    cout << "Interest rate: ";
    cin >> interestRate;
    cout << "Number of payments: ";
    cin >> numOfPayments;
}



void Loan::displaySchedule()
{
    cout << "No.        Balance     Instalment       Interest  Total payment" << endl;
    cout << "----------------------------------------------------------------" << endl;

    for (int i = 1; i <= numOfPayments; i++)
    {
        cout << i << "        " << Balance(i) << "     " << payments() << "     " << interest(i) << "     " << (payments() + interest(i));
        pay(i);
    }
    cout << "----------------------------------------------------------------" << endl;
    cout << sumOfInstalments << sumOfInterest << total;

}
int main()
{
    double amount, interestRate;
    int numPayments;

    readData(amount, interestRate, numPayments);
    Loan myLoan(amount, interestRate, numPayments);
    myLoan.displaySchedule();

      return 0;
}




#include <iostream>
#include <fstream>
#include <ctime>
#include <cstring>
#include <cmath>
#include<cstdlib>

using namespace std;

int main()
{
	srand (( unsigned ) time (0)); 
	double PVi,freq,marg,monthi,yeari,std,mu;
	int n;
	cout<<"Input the Present Value = ;";cin>>PVi;cout<<endl;
	cout<<"Input frequency (1=annually, 2=semi-anually,4=quarterly,12=monthly)";cin>>freq;cout<<endl;
	cout<<"Input number of Periods";cin>>n;cout<<endl; 
	cout<<"Input Margin ";cin>>marg;cout<<endl;
	cout<<"Input mean of the floating rate = ";cin>>mu;cout<<endl;
	cout<<"Input Std of the floating rate";cin>>std;cout<<endl;
	cout<<"Input your starting month";cin>>monthi;cout<<endl;
	cout<<"Input your stating year";cin>>yeari;cout<<endl;
	
	double PV[n+1],closingbal[n],install[n],floatingrate[n], interest[n], principal,periodic[n],per_year[n],per_month[n];
	PV[1]=PVi;
	per_month[1]=monthi;
	per_year[1]=yeari;
	principal=PVi/n;
	double y1,y2,y3;
	
	
	for (int i=1;i<=n;i++)
  {
  y1=double(rand())/double(RAND_MAX);
  y2=double(rand())/double(RAND_MAX);
  y3 = sqrt(-2.0*log(y1))*cos(( 2.0 * 3.141592653589793238462643383279502884197169399375 )*y2);
  floatingrate[i]=mu+(std*y3);
  
  cout<<floatingrate[i]<<endl;
  
  periodic[i]=(marg+floatingrate[i])/freq;
  interest[i]=periodic[i]*PV[i];
  install[i]=interest[i]+principal;
  closingbal[i]=PV[i]-principal;
	PV[i+1]=closingbal[i];
	
	per_year[i+1]=per_year[i];
	per_month[i+1]=per_month[i]+(12/freq);
	
	if (per_month[i+1]>12)
	{
		per_month[i+1]=per_month[i+1]-12;
		per_year[i+1]=per_year[i+1]+1;
	}
}


ofstream myfile3;
myfile3.open ("yassmin.csv");
  myfile3 << "Period#, date, Opening Balance, Principal, Floating Rate, Periodic Interest Rate, Interest, Installment, Closing Balance \n";
  for (int i=1; i<=n;i++)
  {
  
  	myfile3<<i<<","<<per_month[i]<<"/"<<per_year[i]<<","<<PV[i]<<","<<principal<<","<<floatingrate[i]<<","<<periodic[i]<<","<<interest[i]<<","<<install[i]<<","<<closingbal[i]<<endl;
  	
  }
  myfile3.close();
}



